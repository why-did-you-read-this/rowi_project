// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using rowi_project.Data;

#nullable disable

namespace rowi_project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250706232557_AddUniqueIndexes")]
    partial class AddUniqueIndexes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AgentBank", b =>
                {
                    b.Property<int>("AgentsId")
                        .HasColumnType("integer");

                    b.Property<int>("BanksId")
                        .HasColumnType("integer");

                    b.HasKey("AgentsId", "BanksId");

                    b.HasIndex("BanksId");

                    b.ToTable("AgentBank");
                });

            modelBuilder.Entity("rowi_project.Models.Entities.Agent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<bool>("Important")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("rowi_project.Models.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("rowi_project.Models.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("rowi_project.Models.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kpp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ogrn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("OgrnDateOfAssignment")
                        .HasColumnType("date");

                    b.Property<string>("RepEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RepName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RepPatronymic")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RepPhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RepSurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("FullName")
                        .IsUnique();

                    b.HasIndex("Inn")
                        .IsUnique();

                    b.HasIndex("Ogrn")
                        .IsUnique();

                    b.HasIndex("RepEmail")
                        .IsUnique();

                    b.HasIndex("RepPhoneNumber")
                        .IsUnique();

                    b.HasIndex("ShortName")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("AgentBank", b =>
                {
                    b.HasOne("rowi_project.Models.Entities.Agent", null)
                        .WithMany()
                        .HasForeignKey("AgentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rowi_project.Models.Entities.Bank", null)
                        .WithMany()
                        .HasForeignKey("BanksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("rowi_project.Models.Entities.Agent", b =>
                {
                    b.HasOne("rowi_project.Models.Entities.Company", "Company")
                        .WithOne("Agent")
                        .HasForeignKey("rowi_project.Models.Entities.Agent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("rowi_project.Models.Entities.Bank", b =>
                {
                    b.HasOne("rowi_project.Models.Entities.Company", "Company")
                        .WithOne("Bank")
                        .HasForeignKey("rowi_project.Models.Entities.Bank", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("rowi_project.Models.Entities.Client", b =>
                {
                    b.HasOne("rowi_project.Models.Entities.Company", "Company")
                        .WithOne("Client")
                        .HasForeignKey("rowi_project.Models.Entities.Client", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("rowi_project.Models.Entities.Company", b =>
                {
                    b.Navigation("Agent");

                    b.Navigation("Bank");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
